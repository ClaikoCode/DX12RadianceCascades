import os
import sys

solutionDir = sys.argv[1] if len(sys.argv) > 1 else ".\\"
projectDir = solutionDir + "DX12RadianceCascades\\"
shaderDir = projectDir + "Assets\\shaders\\"
targetDir = projectDir + "src\\"
outputFile = "ShaderIDs.h"

def ShaderIDString(shaderID):
    return "\tShaderID" + shaderID

targetPath = targetDir + outputFile
with open(targetPath, "w") as f:

    print(f"CreateShaderIDs.py: Writing shader IDs to '{targetPath}'")

    f.write("// This file is autogenerated and should not be edited.\n\n")
    f.write("#pragma once\n\n")
    f.write("#include <cstdint>\n\n")

    f.write("enum ShaderID : uint64_t\n")
    f.write("{\n")
    f.write(ShaderIDString("None") + "= 0,\n")
    for shaderFile in os.listdir(shaderDir):
        if shaderFile.endswith(".hlsl"):
            shaderFileName = shaderFile[:-5]
            f.write(ShaderIDString(shaderFileName) + ",\n")

    f.write("\n" + ShaderIDString("Count") + " // Keep last!\n")

    f.write("};\n")

print("CreateShaderIDs.py: Done")